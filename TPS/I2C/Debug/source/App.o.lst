   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"App.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../source/App.c"
  20              		.global	fsm
  21              		.section	.bss.fsm,"aw",%nobits
  24              	fsm:
  25 0000 00       		.space	1
  26              		.global	AppBoard
  27              		.section	.bss.AppBoard,"aw",%nobits
  28              		.align	2
  31              	AppBoard:
  32 0000 00000000 		.space	12
  32      00000000 
  32      00000000 
  33              		.global	flag
  34              		.section	.data.flag,"aw"
  37              	flag:
  38 0000 01       		.byte	1
  39              		.global	__aeabi_i2d
  40              		.global	__aeabi_dcmpge
  41              		.section	.text.periodicRefresh,"ax",%progbits
  42              		.align	1
  43              		.global	periodicRefresh
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	periodicRefresh:
  49              	.LFB123:
   1:../source/App.c **** /***************************************************************************//**
   2:../source/App.c ****   @file     App.c
   3:../source/App.c ****   @brief    Application functions
   4:../source/App.c ****   @author   Grupo 5
   5:../source/App.c ****  ******************************************************************************/
   6:../source/App.c **** 
   7:../source/App.c **** /*******************************************************************************
   8:../source/App.c ****  * INCLUDE HEADER FILES
   9:../source/App.c ****  ******************************************************************************/
  10:../source/App.c **** #include <stdint.h>
  11:../source/App.c **** #include "gpio.h"
  12:../source/App.c **** #include <i2c.h>
  13:../source/App.c **** #include <accel.h>
  14:../source/App.c **** #include <FXOS8700CQ.h>
  15:../source/App.c **** #include <math.h>
  16:../source/App.c **** #include "SysTick.h"
  17:../source/App.c **** #include "comunicationHandler.h"
  18:../source/App.c **** #include "drv/Uart.h"
  19:../source/App.c **** #include "drv/CAN_SPI.h"
  20:../source/App.c **** 
  21:../source/App.c **** /*******************************************************************************
  22:../source/App.c ****  * CONSTANT AND MACRO DEFINITIONS USING #DEFINE
  23:../source/App.c ****  ******************************************************************************/
  24:../source/App.c **** 
  25:../source/App.c **** enum{ROLL_REFRESH, PITCH_REFRESH, ORIENT_REFRESH};
  26:../source/App.c **** uint8_t fsm = ROLL_REFRESH;
  27:../source/App.c **** 
  28:../source/App.c **** Orient_t AppBoard;
  29:../source/App.c **** uint8_t flag = 1;
  30:../source/App.c **** 
  31:../source/App.c **** /*******************************************************************************
  32:../source/App.c ****  * FUNCTION PROTOTYPES FOR PRIVATE FUNCTIONS WITH FILE LEVEL SCOPE
  33:../source/App.c ****  ******************************************************************************/
  34:../source/App.c **** 
  35:../source/App.c **** void periodicRefresh(void);
  36:../source/App.c **** bool getCAN_Event(void);
  37:../source/App.c **** void enableSend();
  38:../source/App.c **** 
  39:../source/App.c **** 
  40:../source/App.c **** 
  41:../source/App.c **** /*******************************************************************************
  42:../source/App.c ****  *******************************************************************************
  43:../source/App.c ****                         GLOBAL FUNCTION DEFINITIONS
  44:../source/App.c ****  *******************************************************************************
  45:../source/App.c ****  ******************************************************************************/
  46:../source/App.c **** void periodicRefresh(void)
  47:../source/App.c **** {
  50              		.loc 1 47 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 16
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 84B0     		sub	sp, sp, #16
  59              		.cfi_def_cfa_offset 24
  60 0004 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  48:../source/App.c **** 	Orient_t accel_data = getAccelData();
  62              		.loc 1 48 24
  63 0006 3B1D     		adds	r3, r7, #4
  64 0008 1846     		mov	r0, r3
  65 000a FFF7FEFF 		bl	getAccelData
  49:../source/App.c **** 	if (fabs(accel_data.rolido-AppBoard.rolido)>=5)
  66              		.loc 1 49 21
  67 000e 7A68     		ldr	r2, [r7, #4]
  68              		.loc 1 49 37
  69 0010 434B     		ldr	r3, .L18
  70 0012 1B68     		ldr	r3, [r3]
  71              		.loc 1 49 28
  72 0014 D31A     		subs	r3, r2, r3
  73              		.loc 1 49 6
  74 0016 1846     		mov	r0, r3
  75 0018 FFF7FEFF 		bl	__aeabi_i2d
  76 001c 0246     		mov	r2, r0
  77 001e 0B46     		mov	r3, r1
  78 0020 43EC102B 		vmov	d0, r2, r3
  79 0024 FFF7FEFF 		bl	fabs
  80 0028 51EC100B 		vmov	r0, r1, d0
  81              		.loc 1 49 5
  82 002c 4FF00002 		mov	r2, #0
  83 0030 3C4B     		ldr	r3, .L18+4
  84 0032 FFF7FEFF 		bl	__aeabi_dcmpge
  85 0036 0346     		mov	r3, r0
  86 0038 002B     		cmp	r3, #0
  87 003a 03D0     		beq	.L2
  50:../source/App.c **** 		setWriteAvailable(ROLL_REFRESH,true);
  88              		.loc 1 50 3
  89 003c 0121     		movs	r1, #1
  90 003e 0020     		movs	r0, #0
  91 0040 FFF7FEFF 		bl	setWriteAvailable
  92              	.L2:
  51:../source/App.c **** 	if (fabs(accel_data.cabeceo-AppBoard.cabeceo)>=5)
  93              		.loc 1 51 21
  94 0044 BA68     		ldr	r2, [r7, #8]
  95              		.loc 1 51 38
  96 0046 364B     		ldr	r3, .L18
  97 0048 5B68     		ldr	r3, [r3, #4]
  98              		.loc 1 51 29
  99 004a D31A     		subs	r3, r2, r3
 100              		.loc 1 51 6
 101 004c 1846     		mov	r0, r3
 102 004e FFF7FEFF 		bl	__aeabi_i2d
 103 0052 0246     		mov	r2, r0
 104 0054 0B46     		mov	r3, r1
 105 0056 43EC102B 		vmov	d0, r2, r3
 106 005a FFF7FEFF 		bl	fabs
 107 005e 51EC100B 		vmov	r0, r1, d0
 108              		.loc 1 51 5
 109 0062 4FF00002 		mov	r2, #0
 110 0066 2F4B     		ldr	r3, .L18+4
 111 0068 FFF7FEFF 		bl	__aeabi_dcmpge
 112 006c 0346     		mov	r3, r0
 113 006e 002B     		cmp	r3, #0
 114 0070 03D0     		beq	.L4
  52:../source/App.c **** 		setWriteAvailable(PITCH_REFRESH,true);
 115              		.loc 1 52 3
 116 0072 0121     		movs	r1, #1
 117 0074 0120     		movs	r0, #1
 118 0076 FFF7FEFF 		bl	setWriteAvailable
 119              	.L4:
  53:../source/App.c **** 	if (fabs(accel_data.norte-AppBoard.norte)>=5)
 120              		.loc 1 53 21
 121 007a FA68     		ldr	r2, [r7, #12]
 122              		.loc 1 53 36
 123 007c 284B     		ldr	r3, .L18
 124 007e 9B68     		ldr	r3, [r3, #8]
 125              		.loc 1 53 27
 126 0080 D31A     		subs	r3, r2, r3
 127              		.loc 1 53 6
 128 0082 1846     		mov	r0, r3
 129 0084 FFF7FEFF 		bl	__aeabi_i2d
 130 0088 0246     		mov	r2, r0
 131 008a 0B46     		mov	r3, r1
 132 008c 43EC102B 		vmov	d0, r2, r3
 133 0090 FFF7FEFF 		bl	fabs
 134 0094 51EC100B 		vmov	r0, r1, d0
 135              		.loc 1 53 5
 136 0098 4FF00002 		mov	r2, #0
 137 009c 214B     		ldr	r3, .L18+4
 138 009e FFF7FEFF 		bl	__aeabi_dcmpge
 139 00a2 0346     		mov	r3, r0
 140 00a4 002B     		cmp	r3, #0
 141 00a6 03D0     		beq	.L6
  54:../source/App.c **** 		setWriteAvailable(ORIENT_REFRESH,true);
 142              		.loc 1 54 3
 143 00a8 0121     		movs	r1, #1
 144 00aa 0220     		movs	r0, #2
 145 00ac FFF7FEFF 		bl	setWriteAvailable
 146              	.L6:
  55:../source/App.c **** 	// Cada 1 segundo refresca uno de los par√°metros
  56:../source/App.c **** 	switch (fsm)
 147              		.loc 1 56 2
 148 00b0 1D4B     		ldr	r3, .L18+8
 149 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 150 00b4 022B     		cmp	r3, #2
 151 00b6 18D0     		beq	.L8
 152 00b8 022B     		cmp	r3, #2
 153 00ba 1FDC     		bgt	.L9
 154 00bc 002B     		cmp	r3, #0
 155 00be 02D0     		beq	.L10
 156 00c0 012B     		cmp	r3, #1
 157 00c2 09D0     		beq	.L11
 158 00c4 1AE0     		b	.L9
 159              	.L10:
  57:../source/App.c **** 	{
  58:../source/App.c **** 		case ROLL_REFRESH:
  59:../source/App.c **** 			AppBoard.rolido = accel_data.rolido;
 160              		.loc 1 59 32
 161 00c6 7B68     		ldr	r3, [r7, #4]
 162              		.loc 1 59 20
 163 00c8 154A     		ldr	r2, .L18
 164 00ca 1360     		str	r3, [r2]
  60:../source/App.c **** 			comunicationHandler_send2Ext(AppBoard, ROLL_UPD);
 165              		.loc 1 60 4
 166 00cc 144A     		ldr	r2, .L18
 167 00ce 0123     		movs	r3, #1
 168 00d0 07CA     		ldm	r2, {r0, r1, r2}
 169 00d2 FFF7FEFF 		bl	comunicationHandler_send2Ext
  61:../source/App.c **** 			break;
 170              		.loc 1 61 4
 171 00d6 11E0     		b	.L9
 172              	.L11:
  62:../source/App.c **** 		case PITCH_REFRESH:
  63:../source/App.c **** 			AppBoard.cabeceo = accel_data.cabeceo;
 173              		.loc 1 63 33
 174 00d8 BB68     		ldr	r3, [r7, #8]
 175              		.loc 1 63 21
 176 00da 114A     		ldr	r2, .L18
 177 00dc 5360     		str	r3, [r2, #4]
  64:../source/App.c **** 			comunicationHandler_send2Ext(AppBoard, PITCHING_UPD);
 178              		.loc 1 64 4
 179 00de 104A     		ldr	r2, .L18
 180 00e0 0223     		movs	r3, #2
 181 00e2 07CA     		ldm	r2, {r0, r1, r2}
 182 00e4 FFF7FEFF 		bl	comunicationHandler_send2Ext
  65:../source/App.c **** 			break;
 183              		.loc 1 65 4
 184 00e8 08E0     		b	.L9
 185              	.L8:
  66:../source/App.c **** 		case ORIENT_REFRESH:
  67:../source/App.c **** 			AppBoard.norte = accel_data.norte;
 186              		.loc 1 67 31
 187 00ea FB68     		ldr	r3, [r7, #12]
 188              		.loc 1 67 19
 189 00ec 0C4A     		ldr	r2, .L18
 190 00ee 9360     		str	r3, [r2, #8]
  68:../source/App.c **** 			comunicationHandler_send2Ext(AppBoard, ORIENTATION_UPD);
 191              		.loc 1 68 4
 192 00f0 0B4A     		ldr	r2, .L18
 193 00f2 0323     		movs	r3, #3
 194 00f4 07CA     		ldm	r2, {r0, r1, r2}
 195 00f6 FFF7FEFF 		bl	comunicationHandler_send2Ext
  69:../source/App.c **** 			break;
 196              		.loc 1 69 4
 197 00fa 00BF     		nop
 198              	.L9:
  70:../source/App.c **** 	}
  71:../source/App.c **** 
  72:../source/App.c **** 
  73:../source/App.c **** 	if(fsm == ORIENT_REFRESH)
 199              		.loc 1 73 9
 200 00fc 0A4B     		ldr	r3, .L18+8
 201 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 202              		.loc 1 73 4
 203 0100 022B     		cmp	r3, #2
 204 0102 03D1     		bne	.L12
  74:../source/App.c **** 	{
  75:../source/App.c **** 		fsm = ROLL_REFRESH;
 205              		.loc 1 75 7
 206 0104 084B     		ldr	r3, .L18+8
 207 0106 0022     		movs	r2, #0
 208 0108 1A70     		strb	r2, [r3]
  76:../source/App.c **** 	}
  77:../source/App.c **** 	else
  78:../source/App.c **** 	{
  79:../source/App.c **** 		fsm++;
  80:../source/App.c **** 	}
  81:../source/App.c **** }
 209              		.loc 1 81 1
 210 010a 05E0     		b	.L17
 211              	.L12:
  79:../source/App.c **** 	}
 212              		.loc 1 79 6
 213 010c 064B     		ldr	r3, .L18+8
 214 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 0110 0133     		adds	r3, r3, #1
 216 0112 DAB2     		uxtb	r2, r3
 217 0114 044B     		ldr	r3, .L18+8
 218 0116 1A70     		strb	r2, [r3]
 219              	.L17:
 220              		.loc 1 81 1
 221 0118 00BF     		nop
 222 011a 1037     		adds	r7, r7, #16
 223              		.cfi_def_cfa_offset 8
 224 011c BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 011e 80BD     		pop	{r7, pc}
 228              	.L19:
 229              		.align	2
 230              	.L18:
 231 0120 00000000 		.word	AppBoard
 232 0124 00001440 		.word	1075052544
 233 0128 00000000 		.word	fsm
 234              		.cfi_endproc
 235              	.LFE123:
 237              		.section	.text.App_Init,"ax",%progbits
 238              		.align	1
 239              		.global	App_Init
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	App_Init:
 245              	.LFB124:
  82:../source/App.c **** 
  83:../source/App.c **** 
  84:../source/App.c **** /* Funci√≥n que se llama 1 vez, al comienzo del programa */
  85:../source/App.c **** void App_Init (void)
  86:../source/App.c **** {
 246              		.loc 1 86 1
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  87:../source/App.c **** 	gpioMode(I2C_TP_PIN,OUTPUT);
 256              		.loc 1 87 2
 257 0004 0121     		movs	r1, #1
 258 0006 2220     		movs	r0, #34
 259 0008 FFF7FEFF 		bl	gpioMode
  88:../source/App.c **** 	gpioMode(CAN_TP_PIN,OUTPUT);
 260              		.loc 1 88 2
 261 000c 0121     		movs	r1, #1
 262 000e 2320     		movs	r0, #35
 263 0010 FFF7FEFF 		bl	gpioMode
  89:../source/App.c **** 	gpioWrite(I2C_TP_PIN,HIGH);
 264              		.loc 1 89 2
 265 0014 0121     		movs	r1, #1
 266 0016 2220     		movs	r0, #34
 267 0018 FFF7FEFF 		bl	gpioWrite
  90:../source/App.c ****     SysTick_Init();
 268              		.loc 1 90 5
 269 001c FFF7FEFF 		bl	SysTick_Init
  91:../source/App.c **** 
  92:../source/App.c **** 	FX_I2C_Init();
 270              		.loc 1 92 2
 271 0020 FFF7FEFF 		bl	FX_I2C_Init
  93:../source/App.c **** 
  94:../source/App.c **** 	comunicationHandler_init(5);
 272              		.loc 1 94 2
 273 0024 0520     		movs	r0, #5
 274 0026 FFF7FEFF 		bl	comunicationHandler_init
  95:../source/App.c **** 
  96:../source/App.c ****     SysTick_Reg_Callback(periodicRefresh, 50 * MS_TO_US);
 275              		.loc 1 96 5
 276 002a 4CF25031 		movw	r1, #50000
 277 002e 0448     		ldr	r0, .L21
 278 0030 FFF7FEFF 		bl	SysTick_Reg_Callback
  97:../source/App.c ****     SysTick_Reg_Callback(enableSend, 1000 * MS_TO_US);
 279              		.loc 1 97 5
 280 0034 0349     		ldr	r1, .L21+4
 281 0036 0448     		ldr	r0, .L21+8
 282 0038 FFF7FEFF 		bl	SysTick_Reg_Callback
  98:../source/App.c **** 
  99:../source/App.c **** 
 100:../source/App.c **** }
 283              		.loc 1 100 1
 284 003c 00BF     		nop
 285 003e 80BD     		pop	{r7, pc}
 286              	.L22:
 287              		.align	2
 288              	.L21:
 289 0040 00000000 		.word	periodicRefresh
 290 0044 40420F00 		.word	1000000
 291 0048 00000000 		.word	enableSend
 292              		.cfi_endproc
 293              	.LFE124:
 295              		.section	.text.App_Run,"ax",%progbits
 296              		.align	1
 297              		.global	App_Run
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	App_Run:
 303              	.LFB125:
 101:../source/App.c **** 
 102:../source/App.c **** /* Funci√≥n que se llama constantemente en un ciclo infinito */
 103:../source/App.c **** void App_Run (void)
 104:../source/App.c **** {
 304              		.loc 1 104 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 105:../source/App.c **** 	while(CAN_SPI_Is_Busy());
 314              		.loc 1 105 7
 315 0004 00BF     		nop
 316              	.L24:
 317              		.loc 1 105 8 discriminator 1
 318 0006 FFF7FEFF 		bl	CAN_SPI_Is_Busy
 319 000a 0346     		mov	r3, r0
 320 000c 002B     		cmp	r3, #0
 321 000e FAD1     		bne	.L24
 106:../source/App.c **** 	CAN_SPI_Attempt_to_read();
 322              		.loc 1 106 2
 323 0010 FFF7FEFF 		bl	CAN_SPI_Attempt_to_read
 107:../source/App.c **** 	while(CAN_SPI_Is_Busy());
 324              		.loc 1 107 7
 325 0014 00BF     		nop
 326              	.L25:
 327              		.loc 1 107 8 discriminator 1
 328 0016 FFF7FEFF 		bl	CAN_SPI_Is_Busy
 329 001a 0346     		mov	r3, r0
 330 001c 002B     		cmp	r3, #0
 331 001e FAD1     		bne	.L25
 108:../source/App.c **** 	if(CAN_SPI_Is_Read_Ready())
 332              		.loc 1 108 5
 333 0020 FFF7FEFF 		bl	CAN_SPI_Is_Read_Ready
 334 0024 0346     		mov	r3, r0
 335              		.loc 1 108 4
 336 0026 002B     		cmp	r3, #0
 337 0028 01D0     		beq	.L27
 109:../source/App.c **** 	{
 110:../source/App.c **** 		Com_EventHandler();
 338              		.loc 1 110 3
 339 002a FFF7FEFF 		bl	Com_EventHandler
 340              	.L27:
 111:../source/App.c **** 	}
 112:../source/App.c **** 
 113:../source/App.c **** 
 114:../source/App.c **** 	/*if(getCAN_Event())
 115:../source/App.c **** 	{
 116:../source/App.c **** 		Com_EventHandler();
 117:../source/App.c **** 		flag = 1;
 118:../source/App.c **** 
 119:../source/App.c **** 	}
 120:../source/App.c **** 	if(flag == 1)
 121:../source/App.c **** 	{
 122:../source/App.c **** 		flag = CAN_SPI_Attempt_to_read();
 123:../source/App.c **** 	}*/
 124:../source/App.c **** 
 125:../source/App.c **** }
 341              		.loc 1 125 1
 342 002e 00BF     		nop
 343 0030 80BD     		pop	{r7, pc}
 344              		.cfi_endproc
 345              	.LFE125:
 347              		.section	.text.getCAN_Event,"ax",%progbits
 348              		.align	1
 349              		.global	getCAN_Event
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	getCAN_Event:
 355              	.LFB126:
 126:../source/App.c **** 
 127:../source/App.c **** 
 128:../source/App.c **** bool getCAN_Event(void)
 129:../source/App.c **** {
 356              		.loc 1 129 1
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 130:../source/App.c **** 	//CAN_Com_Happened es un servicio de can que indica si hubo evento de recebcion o envio de datos d
 131:../source/App.c **** 	bool a = CAN_SPI_Is_Read_Ready();
 368              		.loc 1 131 11
 369 0006 FFF7FEFF 		bl	CAN_SPI_Is_Read_Ready
 370 000a 0346     		mov	r3, r0
 371              		.loc 1 131 7
 372 000c 002B     		cmp	r3, #0
 373 000e 14BF     		ite	ne
 374 0010 0123     		movne	r3, #1
 375 0012 0023     		moveq	r3, #0
 376 0014 FB71     		strb	r3, [r7, #7]
 132:../source/App.c **** 	return a;
 377              		.loc 1 132 9
 378 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133:../source/App.c **** }
 379              		.loc 1 133 1
 380 0018 1846     		mov	r0, r3
 381 001a 0837     		adds	r7, r7, #8
 382              		.cfi_def_cfa_offset 8
 383 001c BD46     		mov	sp, r7
 384              		.cfi_def_cfa_register 13
 385              		@ sp needed
 386 001e 80BD     		pop	{r7, pc}
 387              		.cfi_endproc
 388              	.LFE126:
 390              		.section	.text.enableSend,"ax",%progbits
 391              		.align	1
 392              		.global	enableSend
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	enableSend:
 398              	.LFB127:
 134:../source/App.c **** 
 135:../source/App.c **** void enableSend()
 136:../source/App.c **** {
 399              		.loc 1 136 1
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 80B5     		push	{r7, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 137:../source/App.c **** 	setWriteAvailable(1,true);
 409              		.loc 1 137 2
 410 0004 0121     		movs	r1, #1
 411 0006 0120     		movs	r0, #1
 412 0008 FFF7FEFF 		bl	setWriteAvailable
 138:../source/App.c **** 	setWriteAvailable(2,true);
 413              		.loc 1 138 2
 414 000c 0121     		movs	r1, #1
 415 000e 0220     		movs	r0, #2
 416 0010 FFF7FEFF 		bl	setWriteAvailable
 139:../source/App.c **** 	setWriteAvailable(3,true);
 417              		.loc 1 139 2
 418 0014 0121     		movs	r1, #1
 419 0016 0320     		movs	r0, #3
 420 0018 FFF7FEFF 		bl	setWriteAvailable
 140:../source/App.c **** }
 421              		.loc 1 140 1
 422 001c 00BF     		nop
 423 001e 80BD     		pop	{r7, pc}
 424              		.cfi_endproc
 425              	.LFE127:
 427              		.text
 428              	.Letext0:
 429              		.file 2 "/Applications/MCUXpressoIDE_11.8.0_1165/ide/plugins/com.nxp.mcuxpresso.tools.macosx_11.8.
 430              		.file 3 "/Users/agus/Micros/Github/Micros-Grupo-5/TPS/I2C/source/drv/gpio.h"
 431              		.file 4 "/Users/agus/Micros/Github/Micros-Grupo-5/TPS/I2C/source/drv/accel.h"
 432              		.file 5 "../source/comunicationHandler.h"
 433              		.file 6 "../source/drv/CAN_SPI.h"
 434              		.file 7 "/Users/agus/Micros/Github/Micros-Grupo-5/TPS/I2C/source/drv/SysTick.h"
 435              		.file 8 "/Applications/MCUXpressoIDE_11.8.0_1165/ide/plugins/com.nxp.mcuxpresso.tools.macosx_11.8.
DEFINED SYMBOLS
                            *ABS*:0000000000000000 App.c
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:24     .bss.fsm:0000000000000000 fsm
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:25     .bss.fsm:0000000000000000 $d
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:31     .bss.AppBoard:0000000000000000 AppBoard
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:28     .bss.AppBoard:0000000000000000 $d
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:37     .data.flag:0000000000000000 flag
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:42     .text.periodicRefresh:0000000000000000 $t
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:48     .text.periodicRefresh:0000000000000000 periodicRefresh
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:231    .text.periodicRefresh:0000000000000120 $d
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:238    .text.App_Init:0000000000000000 $t
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:244    .text.App_Init:0000000000000000 App_Init
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:289    .text.App_Init:0000000000000040 $d
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:397    .text.enableSend:0000000000000000 enableSend
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:296    .text.App_Run:0000000000000000 $t
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:302    .text.App_Run:0000000000000000 App_Run
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:348    .text.getCAN_Event:0000000000000000 $t
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:354    .text.getCAN_Event:0000000000000000 getCAN_Event
/var/folders/mt/f0brj4z96r5_s3gdkbpppz8m0000gn/T//ccm1UEmG.s:391    .text.enableSend:0000000000000000 $t
                           .group:0000000000000000 wm4.0.23798b1d0196e1dacad68e887eef18fd
                           .group:0000000000000000 wm4.redlib_version.h.24.4f43d7bc124a54bfe120050dd03d6b37
                           .group:0000000000000000 wm4.libconfigarm.h.19.34723c94cbd19598192aa6b1e87fca41
                           .group:0000000000000000 wm4.stdint.h.31.58198de4ea930fb897655479091e17c7
                           .group:0000000000000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231
                           .group:0000000000000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:0000000000000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:0000000000000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:0000000000000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:0000000000000000 wm4.MK64F12.h.475.cafa8e1e521f96f0b72de286863a6df7
                           .group:0000000000000000 wm4.gpio.h.29.c6aad71d79bc2c89ec77d6be0e13d3d4
                           .group:0000000000000000 wm4.FXOS8700CQ.h.10.e9b2be8a3b923610c300948aa46e3954
                           .group:0000000000000000 wm4.math.h.10.68e109de95b1d51cd4842d9cf6f19e3b
                           .group:0000000000000000 wm4.SysTick.h.8.90576eeec008989fde607facc91171c6
                           .group:0000000000000000 wm4.comunicationHandler.h.9.2315d731a4cff98d983dae36b0c94f18
                           .group:0000000000000000 wm4.CAN_SPI.h.8.982c55d67150be3d9eb01d5a0e78a8eb

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dcmpge
getAccelData
fabs
setWriteAvailable
comunicationHandler_send2Ext
gpioMode
gpioWrite
SysTick_Init
FX_I2C_Init
comunicationHandler_init
SysTick_Reg_Callback
CAN_SPI_Is_Busy
CAN_SPI_Attempt_to_read
CAN_SPI_Is_Read_Ready
Com_EventHandler
