   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"hardware.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../source/hardware.c"
  20              		.section	.bss.__LDM_interruptDisableCount,"aw",%nobits
  21              		.align	2
  24              	__LDM_interruptDisableCount:
  25 0000 00000000 		.space	4
  26              		.section	.text.hw_Init,"ax",%progbits
  27              		.align	1
  28              		.global	hw_Init
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	hw_Init:
  34              	.LFB123:
   1:../source/hardware.c **** /*
   2:../source/hardware.c ****  * system.c
   3:../source/hardware.c ****  *
   4:../source/hardware.c ****  *  Created on: May 1, 2015
   5:../source/hardware.c ****  *      Author: Juan Pablo VEGA - Laboratorio de Microprocesadores
   6:../source/hardware.c ****  */
   7:../source/hardware.c **** 
   8:../source/hardware.c **** #include "hardware.h"
   9:../source/hardware.c **** 
  10:../source/hardware.c **** static uint32_t __LDM_interruptDisableCount = 0;
  11:../source/hardware.c **** 
  12:../source/hardware.c **** void hw_Init (void)
  13:../source/hardware.c **** {
  35              		.loc 1 13 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 80B4     		push	{r7}
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 7, -4
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  14:../source/hardware.c **** 	SCB->CPACR |= ((3UL << 10*2) | (3UL << 11*2)); /* set CP10, CP11 for Full Access to the FPU*/
  45              		.loc 1 14 5
  46 0004 344B     		ldr	r3, .L5
  47 0006 D3F88830 		ldr	r3, [r3, #136]
  48 000a 334A     		ldr	r2, .L5
  49              		.loc 1 14 13
  50 000c 43F47003 		orr	r3, r3, #15728640
  51 0010 C2F88830 		str	r3, [r2, #136]
  15:../source/hardware.c **** 
  16:../source/hardware.c **** 	WDOG->UNLOCK  = WDOG_UNLOCK_WDOGUNLOCK(0xC520); /* Key 1 */
  52              		.loc 1 16 6
  53 0014 314B     		ldr	r3, .L5+4
  54              		.loc 1 16 16
  55 0016 4CF22052 		movw	r2, #50464
  56 001a DA81     		strh	r2, [r3, #14]	@ movhi
  17:../source/hardware.c **** 	WDOG->UNLOCK  = WDOG_UNLOCK_WDOGUNLOCK(0xD928); /* Key 2 */
  57              		.loc 1 17 6
  58 001c 2F4B     		ldr	r3, .L5+4
  59              		.loc 1 17 16
  60 001e 4DF62812 		movw	r2, #55592
  61 0022 DA81     		strh	r2, [r3, #14]	@ movhi
  18:../source/hardware.c **** 	WDOG->STCTRLH = WDOG_STCTRLH_ALLOWUPDATE_MASK | WDOG_STCTRLH_CLKSRC_MASK | 0x0100U; /* Disable WDO
  62              		.loc 1 18 6
  63 0024 2D4B     		ldr	r3, .L5+4
  64              		.loc 1 18 16
  65 0026 4FF48972 		mov	r2, #274
  66 002a 1A80     		strh	r2, [r3]	@ movhi
  19:../source/hardware.c **** 
  20:../source/hardware.c **** 	PMC->REGSC |= PMC_REGSC_ACKISO_MASK; /* Release hold with ACKISO:  Only has an effect if recoverin
  67              		.loc 1 20 5
  68 002c 2C4B     		ldr	r3, .L5+8
  69 002e 9B78     		ldrb	r3, [r3, #2]
  70 0030 DBB2     		uxtb	r3, r3
  71 0032 2B4A     		ldr	r2, .L5+8
  72              		.loc 1 20 13
  73 0034 43F00803 		orr	r3, r3, #8
  74 0038 DBB2     		uxtb	r3, r3
  75 003a 9370     		strb	r3, [r2, #2]
  21:../source/hardware.c **** 
  22:../source/hardware.c **** 	SIM->CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV2(0x01) | SIM_CLKDIV1_OUTDIV3(0x01) |
  76              		.loc 1 22 5
  77 003c 294B     		ldr	r3, .L5+12
  78              		.loc 1 22 15
  79 003e 03F58053 		add	r3, r3, #4096
  80 0042 1A46     		mov	r2, r3
  81 0044 284B     		ldr	r3, .L5+16
  82 0046 5364     		str	r3, [r2, #68]
  23:../source/hardware.c **** 
  24:../source/hardware.c **** 	SIM->SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* Set 32 kHz clock source (ERCLK32K) */
  83              		.loc 1 24 5
  84 0048 264B     		ldr	r3, .L5+12
  85 004a 1B68     		ldr	r3, [r3]
  86 004c 254A     		ldr	r2, .L5+12
  87              		.loc 1 24 13
  88 004e 43F44023 		orr	r3, r3, #786432
  89 0052 1360     		str	r3, [r2]
  25:../source/hardware.c **** 	SIM->SOPT2 = SIM_SOPT2_PLLFLLSEL_MASK; /* Set high frequency clock source (PLL) */
  90              		.loc 1 25 5
  91 0054 234B     		ldr	r3, .L5+12
  92              		.loc 1 25 13
  93 0056 03F58053 		add	r3, r3, #4096
  94 005a 1A46     		mov	r2, r3
  95 005c 4FF44033 		mov	r3, #196608
  96 0060 5360     		str	r3, [r2, #4]
  26:../source/hardware.c **** 	// Ports Enable
  27:../source/hardware.c **** 	//SIM->SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | SIM_SCGC5_PORTC_MASK | SIM_SCGC5_POR
  28:../source/hardware.c **** 
  29:../source/hardware.c **** 
  30:../source/hardware.c **** 	MCG->SC = MCG_SC_FCRDIV(0x02); /* Fast clock internal reference divider */
  97              		.loc 1 30 5
  98 0062 224B     		ldr	r3, .L5+20
  99              		.loc 1 30 10
 100 0064 0422     		movs	r2, #4
 101 0066 1A72     		strb	r2, [r3, #8]
  31:../source/hardware.c **** 	MCG->C2 = MCG_C2_RANGE(0x02); /* High frequency range external reference selection */
 102              		.loc 1 31 5
 103 0068 204B     		ldr	r3, .L5+20
 104              		.loc 1 31 10
 105 006a 2022     		movs	r2, #32
 106 006c 5A70     		strb	r2, [r3, #1]
  32:../source/hardware.c **** 
  33:../source/hardware.c **** 	OSC->CR = OSC_CR_ERCLKEN_MASK; /* Set external reference clock (OSCERCLK) */
 107              		.loc 1 33 5
 108 006e 204B     		ldr	r3, .L5+24
 109              		.loc 1 33 10
 110 0070 8022     		movs	r2, #128
 111 0072 1A70     		strb	r2, [r3]
  34:../source/hardware.c **** 
  35:../source/hardware.c **** 	MCG->C7 = MCG_C7_OSCSEL(0x00); /* Set FLL external reference clock (OSCCLK0) */
 112              		.loc 1 35 5
 113 0074 1D4B     		ldr	r3, .L5+20
 114              		.loc 1 35 10
 115 0076 0022     		movs	r2, #0
 116 0078 1A73     		strb	r2, [r3, #12]
  36:../source/hardware.c **** 	MCG->C1 = MCG_C1_CLKS(0x02) | MCG_C1_FRDIV(0x07); /* Set external reference as source, FLL externa
 117              		.loc 1 36 5
 118 007a 1C4B     		ldr	r3, .L5+20
 119              		.loc 1 36 10
 120 007c B822     		movs	r2, #184
 121 007e 1A70     		strb	r2, [r3]
  37:../source/hardware.c **** 	while((MCG->S & MCG_S_IREFST_MASK) != 0x00U); /* Check external reference validation */
 122              		.loc 1 37 7
 123 0080 00BF     		nop
 124              	.L2:
 125              		.loc 1 37 12 discriminator 1
 126 0082 1A4B     		ldr	r3, .L5+20
 127 0084 9B79     		ldrb	r3, [r3, #6]
 128 0086 DBB2     		uxtb	r3, r3
 129              		.loc 1 37 16 discriminator 1
 130 0088 03F01003 		and	r3, r3, #16
 131              		.loc 1 37 37 discriminator 1
 132 008c 002B     		cmp	r3, #0
 133 008e F8D1     		bne	.L2
  38:../source/hardware.c **** 	MCG->C5 = MCG_C5_PRDIV0(0x0F); /* Set PLL divider while PLL turned off */
 134              		.loc 1 38 5
 135 0090 164B     		ldr	r3, .L5+20
 136              		.loc 1 38 10
 137 0092 0F22     		movs	r2, #15
 138 0094 1A71     		strb	r2, [r3, #4]
  39:../source/hardware.c **** 	MCG->C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV0(0x08); /* Set PLL multiplier and PLL select */
 139              		.loc 1 39 5
 140 0096 154B     		ldr	r3, .L5+20
 141              		.loc 1 39 10
 142 0098 4822     		movs	r2, #72
 143 009a 5A71     		strb	r2, [r3, #5]
  40:../source/hardware.c **** 	while((MCG->S & MCG_S_LOCK0_MASK) == 0x00U); /* Wait until PLL is locked*/
 144              		.loc 1 40 7
 145 009c 00BF     		nop
 146              	.L3:
 147              		.loc 1 40 12 discriminator 1
 148 009e 134B     		ldr	r3, .L5+20
 149 00a0 9B79     		ldrb	r3, [r3, #6]
 150 00a2 DBB2     		uxtb	r3, r3
 151              		.loc 1 40 16 discriminator 1
 152 00a4 03F04003 		and	r3, r3, #64
 153              		.loc 1 40 36 discriminator 1
 154 00a8 002B     		cmp	r3, #0
 155 00aa F8D0     		beq	.L3
  41:../source/hardware.c **** 	MCG->C1 &= ~MCG_C1_CLKS_MASK;
 156              		.loc 1 41 5
 157 00ac 0F4B     		ldr	r3, .L5+20
 158 00ae 1B78     		ldrb	r3, [r3]
 159 00b0 DBB2     		uxtb	r3, r3
 160 00b2 0E4A     		ldr	r2, .L5+20
 161              		.loc 1 41 10
 162 00b4 03F03F03 		and	r3, r3, #63
 163 00b8 DBB2     		uxtb	r3, r3
 164 00ba 1370     		strb	r3, [r2]
  42:../source/hardware.c **** 	while((MCG->S & MCG_S_CLKST_MASK) != 0x0CU); /* Wait until output of the PLL is selected */
 165              		.loc 1 42 7
 166 00bc 00BF     		nop
 167              	.L4:
 168              		.loc 1 42 12 discriminator 1
 169 00be 0B4B     		ldr	r3, .L5+20
 170 00c0 9B79     		ldrb	r3, [r3, #6]
 171 00c2 DBB2     		uxtb	r3, r3
 172              		.loc 1 42 16 discriminator 1
 173 00c4 03F00C03 		and	r3, r3, #12
 174              		.loc 1 42 36 discriminator 1
 175 00c8 0C2B     		cmp	r3, #12
 176 00ca F8D1     		bne	.L4
  43:../source/hardware.c **** 
  44:../source/hardware.c **** 
  45:../source/hardware.c **** 
  46:../source/hardware.c **** #if 0
  47:../source/hardware.c **** 	static PORT_Type* const portBaseList[FSL_FEATURE_SOC_PORT_COUNT] = PORT_BASE_PTRS;
  48:../source/hardware.c **** 
  49:../source/hardware.c **** 	int i;
  50:../source/hardware.c **** 	for (i=0 ; i<FSL_FEATURE_SOC_PORT_COUNT ; ++i)
  51:../source/hardware.c **** 		portBaseList[i]->ISFR = PORT_ISFR_ISF_MASK;
  52:../source/hardware.c **** #endif
  53:../source/hardware.c **** 
  54:../source/hardware.c **** }
 177              		.loc 1 54 1
 178 00cc 00BF     		nop
 179 00ce 00BF     		nop
 180 00d0 BD46     		mov	sp, r7
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 00d2 5DF8047B 		ldr	r7, [sp], #4
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 00d6 7047     		bx	lr
 187              	.L6:
 188              		.align	2
 189              	.L5:
 190 00d8 00ED00E0 		.word	-536810240
 191 00dc 00200540 		.word	1074077696
 192 00e0 00D00740 		.word	1074253824
 193 00e4 00700440 		.word	1074032640
 194 00e8 00001301 		.word	18022400
 195 00ec 00400640 		.word	1074151424
 196 00f0 00500640 		.word	1074155520
 197              		.cfi_endproc
 198              	.LFE123:
 200              		.section	.text.hw_EnableInterrupts,"ax",%progbits
 201              		.align	1
 202              		.global	hw_EnableInterrupts
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	hw_EnableInterrupts:
 208              	.LFB124:
  55:../source/hardware.c **** 
  56:../source/hardware.c **** void hw_EnableInterrupts (void)
  57:../source/hardware.c **** {
 209              		.loc 1 57 1
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
  58:../source/hardware.c ****     if (__LDM_interruptDisableCount > 0)
 219              		.loc 1 58 37
 220 0004 094B     		ldr	r3, .L10
 221 0006 1B68     		ldr	r3, [r3]
 222              		.loc 1 58 8
 223 0008 002B     		cmp	r3, #0
 224 000a 0AD0     		beq	.L9
  59:../source/hardware.c ****     {
  60:../source/hardware.c ****         __LDM_interruptDisableCount--;
 225              		.loc 1 60 36
 226 000c 074B     		ldr	r3, .L10
 227 000e 1B68     		ldr	r3, [r3]
 228 0010 013B     		subs	r3, r3, #1
 229 0012 064A     		ldr	r2, .L10
 230 0014 1360     		str	r3, [r2]
  61:../source/hardware.c **** 
  62:../source/hardware.c ****         if (__LDM_interruptDisableCount == 0)
 231              		.loc 1 62 41
 232 0016 054B     		ldr	r3, .L10
 233 0018 1B68     		ldr	r3, [r3]
 234              		.loc 1 62 12
 235 001a 002B     		cmp	r3, #0
 236 001c 01D1     		bne	.L9
 237              	.LBB6:
 238              	.LBB7:
 239              		.file 2 "/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos
   1:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /**************************************************************************//**
   2:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  * @version  V4.30
   5:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  * @date     20. October 2015
   6:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  ******************************************************************************/
   7:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
   9:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    All rights reserved.
  10:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****      specific prior written permission.
  20:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    *
  21:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  34:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  35:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  38:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** #endif
  45:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  46:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  47:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   @{
  51:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  */
  52:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  53:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /**
  54:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  */
  58:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** {
  60:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 240              		.loc 2 60 3
 241              		.syntax unified
 242              	@ 60 "/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dan
 243 001e 62B6     		cpsie i
 244              	@ 0 "" 2
  61:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** }
 245              		.loc 2 61 1
 246              		.thumb
 247              		.syntax unified
 248 0020 00BF     		nop
 249              	.L9:
 250              	.LBE7:
 251              	.LBE6:
  63:../source/hardware.c ****         	__enable_irq();
  64:../source/hardware.c ****     }
  65:../source/hardware.c **** }
 252              		.loc 1 65 1
 253 0022 00BF     		nop
 254 0024 BD46     		mov	sp, r7
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 0026 5DF8047B 		ldr	r7, [sp], #4
 258              		.cfi_restore 7
 259              		.cfi_def_cfa_offset 0
 260 002a 7047     		bx	lr
 261              	.L11:
 262              		.align	2
 263              	.L10:
 264 002c 00000000 		.word	__LDM_interruptDisableCount
 265              		.cfi_endproc
 266              	.LFE124:
 268              		.section	.text.hw_DisableInterrupts,"ax",%progbits
 269              		.align	1
 270              		.global	hw_DisableInterrupts
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	hw_DisableInterrupts:
 276              	.LFB125:
  66:../source/hardware.c **** void hw_DisableInterrupts (void)
  67:../source/hardware.c **** {
 277              		.loc 1 67 1
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282 0000 80B4     		push	{r7}
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 7, -4
 285 0002 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 287              	.LBB8:
 288              	.LBB9:
  62:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  63:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** 
  64:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** /**
  65:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****  */
  69:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** {
  71:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 289              		.loc 2 71 3
 290              		.syntax unified
 291              	@ 71 "/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dan
 292 0004 72B6     		cpsid i
 293              	@ 0 "" 2
  72:/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos Dani FTM/FTM_IC/CMSIS/cmsis_gcc.h **** }
 294              		.loc 2 72 1
 295              		.thumb
 296              		.syntax unified
 297 0006 00BF     		nop
 298              	.LBE9:
 299              	.LBE8:
  68:../source/hardware.c ****     __disable_irq();
  69:../source/hardware.c **** 
  70:../source/hardware.c ****     __LDM_interruptDisableCount++;
 300              		.loc 1 70 32
 301 0008 044B     		ldr	r3, .L13
 302 000a 1B68     		ldr	r3, [r3]
 303 000c 0133     		adds	r3, r3, #1
 304 000e 034A     		ldr	r2, .L13
 305 0010 1360     		str	r3, [r2]
  71:../source/hardware.c **** }
 306              		.loc 1 71 1
 307 0012 00BF     		nop
 308 0014 BD46     		mov	sp, r7
 309              		.cfi_def_cfa_register 13
 310              		@ sp needed
 311 0016 5DF8047B 		ldr	r7, [sp], #4
 312              		.cfi_restore 7
 313              		.cfi_def_cfa_offset 0
 314 001a 7047     		bx	lr
 315              	.L14:
 316              		.align	2
 317              	.L13:
 318 001c 00000000 		.word	__LDM_interruptDisableCount
 319              		.cfi_endproc
 320              	.LFE125:
 322              		.text
 323              	.Letext0:
 324              		.file 3 "/Applications/MCUXpressoIDE_11.8.0_1165/ide/plugins/com.nxp.mcuxpresso.tools.macosx_11.8.
 325              		.file 4 "/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos
 326              		.file 5 "/Users/juanpablo/Documents/Micros/MCUXpressoIDE/workspace/Micros-Grupo-5/TPS/TP3/Ejemplos
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hardware.c
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:21     .bss.__LDM_interruptDisableCount:0000000000000000 $d
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:24     .bss.__LDM_interruptDisableCount:0000000000000000 __LDM_interruptDisableCount
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:27     .text.hw_Init:0000000000000000 $t
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:33     .text.hw_Init:0000000000000000 hw_Init
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:190    .text.hw_Init:00000000000000d8 $d
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:201    .text.hw_EnableInterrupts:0000000000000000 $t
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:207    .text.hw_EnableInterrupts:0000000000000000 hw_EnableInterrupts
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:264    .text.hw_EnableInterrupts:000000000000002c $d
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:269    .text.hw_DisableInterrupts:0000000000000000 $t
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:275    .text.hw_DisableInterrupts:0000000000000000 hw_DisableInterrupts
/var/folders/mt/2789gh7n01n3x6vbqrlgzf9r0000gn/T//ccDh4H17.s:318    .text.hw_DisableInterrupts:000000000000001c $d
                           .group:0000000000000000 wm4.0.23798b1d0196e1dacad68e887eef18fd
                           .group:0000000000000000 wm4.redlib_version.h.24.4f43d7bc124a54bfe120050dd03d6b37
                           .group:0000000000000000 wm4.libconfigarm.h.19.34723c94cbd19598192aa6b1e87fca41
                           .group:0000000000000000 wm4.stdint.h.31.58198de4ea930fb897655479091e17c7
                           .group:0000000000000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231
                           .group:0000000000000000 wm4.fsl_device_registers.h.32.f10b25a7fd7ad45b9a40904c33f28816
                           .group:0000000000000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:0000000000000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:0000000000000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:0000000000000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:0000000000000000 wm4.MK64F12.h.475.cafa8e1e521f96f0b72de286863a6df7
                           .group:0000000000000000 wm4.MK64F12_features.h.92.512cea46d882153168efeec0bc3a9da7
                           .group:0000000000000000 wm4.hardware.h.27.0531344360c1b4ef1fba1263e2a4c488

NO UNDEFINED SYMBOLS
